FIND_PACKAGE(Lua REQUIRED)

INCLUDE_DIRECTORIES(${LUA_INCLUDE_DIRS})

FILE(GLOB HEADER src/*.h include/*.h)
FILE(GLOB SRC src/*.cpp *.rc)
FILE(GLOB UI ui/*.ui)
FILE(GLOB QRC *.qrc)
FILE(GLOB TS *.ts)
FILE(GLOB ICONS misc/*.icns *.ico)

IF(APPLE)
  SET(MACOSX_BUNDLE_GUI_IDENTIFIER "org.melting-pot.cebmtpchat")
ENDIF()

IF(WITH_RYZOM)
  SET(PACKAGE_BASENAME "${TARGET}-ryzom")
ELSE()
  SET(PACKAGE_BASENAME "${TARGET}")
ENDIF()

IF(PLUGIN)
  ADD_DEFINITIONS(-DQT_PLUGIN)
  ADD_DEFINITIONS(-DQT_SHARED)
  ADD_DEFINITIONS(-DQT_NO_DEBUG)
  SET_TARGET_PLUGIN(${TARGET} ${SRC} ${QRC} ${UI} ${HEADER} ${TS})
ELSE()
  SET_TARGET_GUI_EXECUTABLE(${TARGET} ${SRC} ${QRC} ${UI} ${HEADER} ${TS} ${ICONS})
ENDIF()

SET_TARGET_LABEL(${TARGET} ${PRODUCT})
TARGET_LINK_LIBRARIES(${TARGET} max ${LUA_LIBRARIES})

IF(MINGW)
  # resource compilation for MinGW
  ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/ceb_rc.o
    COMMAND windres.exe -I${CMAKE_CURRENT_SOURCE_DIR} -i${CMAKE_CURRENT_SOURCE_DIR}/ceb.rc
    -o ${CMAKE_CURRENT_BINARY_DIR}/ceb_rc.o )
  SET(CEB_SRCS ${CEB_SRCS} ${CMAKE_CURRENT_BINARY_DIR}/ceb_rc.o)
ENDIF()

IF(WITH_PCH)
  ADD_NATIVE_PRECOMPILED_HEADER(${TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/src/common.h ${CMAKE_CURRENT_SOURCE_DIR}/src/common.cpp)
ENDIF()

IF(APPLE)
  # Manually copy all files in Mac OS X Bundle
  IF(WITH_RYZOM)
    ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND mkdir -p ${RESOURCES_DIR}/profiles)
    ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/share/default_*.xml ${RESOURCES_DIR}/profiles)
    ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/share/ceb_ryzom.ini ${RESOURCES_DIR}/ceb.ini)
  ELSE()
    ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/share/ceb.ini ${RESOURCES_DIR})
  ENDIF()

  ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND cp -R ${CMAKE_CURRENT_SOURCE_DIR}/share/scripts ${RESOURCES_DIR})
  ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND cp -R ${CMAKE_CURRENT_SOURCE_DIR}/share/modifiers ${RESOURCES_DIR})
  ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND cp -R ${CMAKE_CURRENT_SOURCE_DIR}/share/resources ${RESOURCES_DIR})
  ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND cp ${CMAKE_SOURCE_DIR}/COPYING ${RESOURCES_DIR})
  ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/share/whatsnew.html ${RESOURCES_DIR})

  ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND find ${RESOURCES_DIR} -name .svn -print0 | xargs -0 rm -rf)
ELSE()
  IF(WITH_RYZOM)
    INSTALL(FILES share/ceb_ryzom.ini DESTINATION ${SHARE_PREFIX} RENAME ceb.ini)
    FILE(GLOB PROFILES share/default_*.xml)
    INSTALL(FILES ${PROFILES} DESTINATION ${SHARE_PREFIX}/profiles)
  ELSE()
    INSTALL(FILES share/ceb.ini DESTINATION ${SHARE_PREFIX})
  ENDIF()

  INSTALL(DIRECTORY share/scripts DESTINATION ${SHARE_PREFIX})
  INSTALL(DIRECTORY share/modifiers DESTINATION ${SHARE_PREFIX})
  INSTALL(DIRECTORY share/resources DESTINATION ${SHARE_PREFIX})
  INSTALL(FILES ${CMAKE_SOURCE_DIR}/COPYING share/whatsnew.html DESTINATION ${SHARE_PREFIX})
ENDIF()

# NSIS Specific Packing Setup
SET(CPACK_NSIS_HELP_LINK "http://dev.kervala.net/projects/cebmtpchat/wiki")
SET(CPACK_NSIS_URL_INFO_ABOUT "http://dev.kervala.net/projects/cebmtpchat")

# Don't specify a directory because we manage ourself the files
INSTALL_RESOURCES(${TARGET} "")
